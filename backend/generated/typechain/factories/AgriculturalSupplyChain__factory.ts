/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AgriculturalSupplyChain,
  AgriculturalSupplyChainInterface,
} from "../AgriculturalSupplyChain";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchTransactions",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createProductBatch",
    inputs: [
      {
        name: "_farmerAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "_qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBatchDetails",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchTransactions",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct AgriculturalSupplyChain.Transaction[]",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "timestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionHash",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderBatches",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderDetails",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isVerifiedStakeholder",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextBatchId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "productBatches",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerStakeholder",
    inputs: [
      {
        name: "_stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeholderBatches",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakeholders",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferBatch",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_from",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAdmin",
    inputs: [
      {
        name: "_newAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateProductStatus",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyQuality",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_grade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "_newQualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ProductBatchCreated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "farmer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "productType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductStatusUpdated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductTransferred",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QualityVerified",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "grade",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "verifier",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeholderRegistered",
    inputs: [
      {
        name: "stakeholder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523461002757610011610132565b61001961002c565b613122610153823961312290f35b610032565b60405190565b5f80fd5b5f1b90565b9061004c60018060a01b0391610036565b9181191691161790565b60018060a01b031690565b90565b61007861007361007d92610056565b610061565b610056565b90565b61008990610064565b90565b61009590610080565b90565b90565b906100b06100ab6100b79261008c565b610098565b825461003b565b9055565b90565b90565b6100d56100d06100da926100bb565b610061565b6100be565b90565b906100e95f1991610036565b9181191691161790565b61010761010261010c926100be565b610061565b6100be565b90565b90565b9061012761012261012e926100f3565b61010f565b82546100dd565b9055565b61013c335f61009b565b61015061014960016100c1565b6001610112565b56fe60806040526004361015610013575b61150d565b61001d5f3561012c565b80631bd9baac146101275780633297146b146101225780636a7f1fcb1461011d5780636b396d98146101185780636b5a3a2b146101135780636fde54651461010e5780638369a64f146101095780638462a7f81461010457806393858107146100ff5780639d47dcc0146100fa578063a7fede55146100f5578063aaddba58146100f0578063ae51cef9146100eb578063c07cfca9146100e6578063d40d51b8146100e1578063e2f273bd146100dc5763f851a4400361000e576114d8565b61145c565b611425565b611355565b61121d565b61115f565b610fd0565b610d50565b610bb9565b610b15565b610ac2565b6109ee565b610975565b6108d1565b610792565b6106f7565b6104f2565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61015081610144565b0361015757565b5f80fd5b9050359061016882610147565b565b9190604083820312610192578061018661018f925f860161015b565b9360200161015b565b90565b61013c565b90565b6101ae6101a96101b392610144565b610197565b610144565b90565b906101c09061019a565b5f5260205260405f2090565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b6101f6816101e0565b821015610210576102086005916101e4565b910201905f90565b6101cc565b5f1c90565b60018060a01b031690565b61023161023691610215565b61021a565b90565b6102439054610225565b90565b90565b61025561025a91610215565b610246565b90565b6102679054610249565b90565b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801561029e575b602083101461029957565b61026a565b91607f169161028e565b60209181520190565b5f5260205f2090565b905f92918054906102d46102cd8361027e565b80946102a8565b916001811690815f1461032b57506001146102ef575b505050565b6102fc91929394506102b1565b915f925b81841061031357505001905f80806102ea565b60018160209295939554848601520191019290610300565b92949550505060ff19168252151560200201905f80806102ea565b90610350916102ba565b90565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061037b90610353565b810190811067ffffffffffffffff82111761039557604052565b61035d565b906103ba6103b3926103aa610132565b93848092610346565b0383610371565b565b6103c79060046101b6565b906103d1826101e0565b811015610423576103e1916101ed565b506103ed5f8201610239565b916103fa60018301610239565b916104076002820161025d565b9161042060046104196003850161025d565b930161039a565b90565b5f80fd5b60018060a01b031690565b61043b90610427565b90565b61044790610432565b9052565b61045490610144565b9052565b5190565b60209181520190565b90825f9392825e0152565b61048f61049860209361049d9361048681610458565b9384809361045c565b95869101610465565b610353565b0190565b91936104d86104ef96946104ce6104e294976104c460a08801995f89019061043e565b602087019061043e565b604085019061044b565b606083019061044b565b6080818403910152610470565b90565b346105275761052361050e61050836600461016a565b906103bc565b9161051a959395610132565b958695866104a1565b0390f35b610138565b61053581610432565b0361053c57565b5f80fd5b9050359061054d8261052c565b565b5f80fd5b5f80fd5b9061056a610563610132565b9283610371565b565b67ffffffffffffffff811161058a57610586602091610353565b0190565b61035d565b90825f939282370152565b909291926105af6105aa8261056c565b610557565b938185526020850190828401116105cb576105c99261058f565b565b610553565b9080601f830112156105ee578160206105eb9335910161059a565b90565b61054f565b91610120838303126106dd5761060b825f8501610540565b92602081013567ffffffffffffffff81116106d8578361062c9183016105d0565b92604082013567ffffffffffffffff81116106d3578161064d9184016105d0565b9261065b826060850161015b565b92610669836080830161015b565b926106778160a0840161015b565b926106858260c0850161015b565b9260e081013567ffffffffffffffff81116106ce57836106a69183016105d0565b9261010082013567ffffffffffffffff81116106c9576106c692016105d0565b90565b610140565b610140565b610140565b610140565b61013c565b91906106f5905f6020850194019061044b565b565b346107315761072d61071c61070d3660046105f3565b97969096959195949294612034565b610724610132565b918291826106e2565b0390f35b610138565b6005111561074057565b5f80fd5b9050359061075182610736565b565b90916060828403126107885761078561076e845f850161015b565b9361077c8160208601610540565b93604001610744565b90565b61013c565b5f0190565b346107c1576107ab6107a5366004610753565b91612232565b6107b3610132565b806107bd8161078d565b0390f35b610138565b91906040838203126107ee57806107e26107eb925f8601610540565b9360200161015b565b90565b61013c565b61080761080261080c92610427565b610197565b610427565b90565b610818906107f3565b90565b6108249061080f565b90565b906108319061081b565b5f5260205260405f2090565b5490565b5f5260205f2090565b6108538161083d565b82101561086d57610865600191610841565b910201905f90565b6101cc565b1c90565b61088690600861088b9302610872565b610246565b90565b906108999154610876565b90565b6108a7906005610827565b6108b08161083d565b8210156108cd576108ca916108c49161084a565b9061088e565b90565b5f80fd5b34610902576108fe6108ed6108e73660046107c6565b9061089c565b6108f5610132565b918291826106e2565b0390f35b610138565b6004111561091157565b5f80fd5b9050359061092282610907565b565b916060838303126109705761093b825f850161015b565b926109498360208301610915565b92604082013567ffffffffffffffff811161096b5761096892016105d0565b90565b610140565b61013c565b346109a45761098e610988366004610924565b91612361565b610996610132565b806109a08161078d565b0390f35b610138565b906020828203126109c2576109bf915f01610540565b90565b61013c565b151590565b6109d5906109c7565b9052565b91906109ec905f602085019401906109cc565b565b34610a1e57610a1a610a09610a043660046109a9565b612372565b610a11610132565b918291826109d9565b0390f35b610138565b5190565b60209181520190565b60200190565b610a3f90610144565b9052565b90610a5081602093610a36565b0190565b60200190565b90610a77610a71610a6a84610a23565b8093610a27565b92610a30565b905f5b818110610a875750505090565b909192610aa0610a9a6001928651610a43565b94610a54565b9101919091610a7a565b610abf9160208201915f818403910152610a5a565b90565b34610af257610aee610add610ad83660046109a9565b612446565b610ae5610132565b91829182610aaa565b0390f35b610138565b5f910312610b0157565b61013c565b610b1260015f9061088e565b90565b34610b4557610b25366004610af7565b610b41610b30610b06565b610b38610132565b918291826106e2565b0390f35b610138565b91909160a081840312610bb457610b63835f830161015b565b92610b718160208401610540565b92610b7f8260408501610540565b92610b8d836060830161015b565b92608082013567ffffffffffffffff8111610baf57610bac92016105d0565b90565b610140565b61013c565b34610beb57610bd5610bcc366004610b4a565b939290926127c0565b610bdd610132565b80610be78161078d565b0390f35b610138565b90602082820312610c0957610c06915f0161015b565b90565b61013c565b634e487b7160e01b5f52602160045260245ffd5b60051115610c2c57565b610c0e565b90610c3b82610c22565b565b610c4690610c31565b90565b610c5290610c3d565b9052565b60041115610c6057565b610c0e565b90610c6f82610c56565b565b610c7a90610c65565b90565b610c8690610c71565b9052565b9a96610d1090610d06610d3098610d4d9f9d989b948f610cff610d3e9f99610d259b610ce660a095610cf493610cd9610d1a9e610ccf6101808a01945f8b019061043e565b602089019061043e565b8682036040880152610470565b908482036060860152610470565b9e608083019061044b565b019061044b565b60c08d019061044b565b60e08b0190610c49565b610100890190610c7d565b61012087019061044b565b848203610140860152610470565b91610160818403910152610470565b90565b34610d9057610d8c610d6b610d66366004610bf0565b612927565b98610d839c9a9c989198979297969396959495610132565b9c8d9c8d610c8a565b0390f35b610138565b90610d9f9061019a565b5f5260205260405f2090565b60ff1690565b610dbd610dc291610215565b610dab565b90565b610dcf9054610db1565b90565b60081c90565b60ff1690565b610dea610def91610dd2565b610dd8565b90565b610dfc9054610dde565b90565b60ff1690565b610e11610e1691610215565b610dff565b90565b610e239054610e05565b90565b610e31906003610d95565b90610e3d5f830161025d565b91610e4a60018201610239565b91610e5760028301610239565b91610e646003820161039a565b91610e716004830161039a565b91610e7e6005820161025d565b91610e8b6006830161025d565b91610e986007820161025d565b91610ea560088301610dc5565b91610eb260088201610df2565b91610ebf6009830161025d565b91610ecc600a820161039a565b91610ee5600c610ede600b850161039a565b9301610e19565b90565b9e9d9b95968f90610fce9e9a610f8c610fb79b6101a09f98610fc69f9794610f78610f6d610fa99d610f5f6101209b610f8296610f9e9f610f519060408f610f979f610f4a90610f406101c08401985f85019061044b565b602083019061043e565b019061043e565b8c6060818403910152610470565b908a820360808c0152610470565b9e60a089019061044b565b60c087019061044b565b60e085019061044b565b610100830190610c49565b0190610c7d565b6101408c019061044b565b8982036101608b0152610470565b90878203610180890152610470565b9401906109cc565b565b346110135761100f610feb610fe6366004610bf0565b610e26565b9a6110069e9c9e9a919a999299989398979497969596610132565b9e8f9e8f610ee8565b0390f35b610138565b5190565b60209181520190565b60200190565b61103490610432565b9052565b6110576110606020936110659361104e81610458565b938480936102a8565b95869101610465565b610353565b0190565b6110ca91608060a08201926110845f8201515f85019061102b565b6110966020820151602085019061102b565b6110a860408201516040850190610a36565b6110ba60608201516060850190610a36565b0151906080818403910152611038565b90565b906110d791611069565b90565b60200190565b906110f46110ed83611018565b809261101c565b908161110560208302840194611025565b925f915b83831061111857505050505090565b9091929394602061113a611134838560019503875289516110cd565b976110da565b9301930191939290611109565b61115c9160208201915f8184039101526110e0565b90565b3461118f5761118b61117a611175366004610bf0565b612b15565b611182610132565b91829182611147565b0390f35b610138565b6005111561119e57565b610c0e565b906111ad82611194565b565b6111b8906111a3565b90565b6111c4906111af565b9052565b91936112036111f861120d9361121a9896976111eb60a08801925f8901906111bb565b8682036020880152610470565b9560408501906109cc565b606083019061044b565b6080818403910152610470565b90565b346112515761124d6112386112333660046109a9565b612b30565b91611244959395610132565b958695866111c8565b0390f35b610138565b906112609061081b565b5f5260205260405f2090565b60a01c90565b60ff1690565b6112846112899161126c565b611272565b90565b6112969054611278565b90565b6112a4906002611256565b906112b05f8301610239565b916112bc5f820161128c565b916112c96001830161039a565b916112d660028201610e19565b916112ef60046112e86003850161025d565b930161039a565b90565b926113306113529795969261133b926113236113459661131960c08a01945f8b019061043e565b60208901906111bb565b8682036040880152610470565b9560608501906109cc565b608083019061044b565b60a0818403910152610470565b90565b3461138c5761138861137061136b3660046109a9565b611299565b9261137f969496929192610132565b968796876112f2565b0390f35b610138565b6005111561139b57565b5f80fd5b905035906113ac82611391565b565b90608082820312611420576113c5815f8401610540565b926113d3826020850161139f565b92604081013567ffffffffffffffff811161141b57836113f49183016105d0565b92606082013567ffffffffffffffff81116114165761141392016105d0565b90565b610140565b610140565b61013c565b34611457576114416114383660046113ae565b92919091612ff1565b611449610132565b806114538161078d565b0390f35b610138565b3461148a5761147461146f3660046109a9565b6130e1565b61147c610132565b806114868161078d565b0390f35b610138565b61149f9060086114a49302610872565b61021a565b90565b906114b2915461148f565b90565b6114c05f5f906114a7565b90565b91906114d6905f6020850194019061043e565b565b34611508576114e8366004610af7565b6115046114f36114b5565b6114fb610132565b918291826114c3565b0390f35b610138565b5f80fd5b5f90565b5f7f5374616b65686f6c646572206e6f742076657269666965640000000000000000910152565b611549601860209261045c565b61155281611515565b0190565b61156b9060208101905f81830391015261153c565b90565b1561157557565b61157d610132565b62461bcd60e51b81528061159360048201611556565b0390fd5b906115c69998979695949392916115c16115bc60026115b68582611256565b01610e19565b61156e565b611e08565b90565b5f7f4f6e6c79206661726d6572732063616e20637265617465206261746368657300910152565b6115fd601f60209261045c565b611606816115c9565b0190565b61161f9060208101905f8183039101526115f0565b90565b1561162957565b611631610132565b62461bcd60e51b8152806116476004820161160a565b0390fd5b90565b61166261165d6116679261164b565b610197565b610144565b90565b5f7f5175616e74697479206d7573742062652067726561746572207468616e203000910152565b61169e601f60209261045c565b6116a78161166a565b0190565b6116c09060208101905f818303910152611691565b90565b156116ca57565b6116d2610132565b62461bcd60e51b8152806116e8600482016116ab565b0390fd5b60207f7420646174650000000000000000000000000000000000000000000000000000917f4578706972792064617465206d757374206265206166746572206861727665735f8201520152565b611746602660409261045c565b61174f816116ec565b0190565b6117689060208101905f818303910152611739565b90565b1561177257565b61177a610132565b62461bcd60e51b81528061179060048201611753565b0390fd5b5f7f5072696365206d7573742062652067726561746572207468616e203000000000910152565b6117c8601c60209261045c565b6117d181611794565b0190565b6117ea9060208101905f8183039101526117bb565b90565b156117f457565b6117fc610132565b62461bcd60e51b815280611812600482016117d5565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b61183390610144565b5f1981146118415760010190565b611816565b5f1b90565b906118575f1991611846565b9181191691161790565b90565b906118796118746118809261019a565b611861565b825461184b565b9055565b61188f6101c0610557565b90565b9061189c90610144565b9052565b906118aa90610432565b9052565b52565b906118bb90610c31565b9052565b906118c990610c65565b9052565b906118d7906109c7565b9052565b634e487b7160e01b5f525f60045260245ffd5b6118f89051610144565b90565b6119059051610432565b90565b9061191960018060a01b0391611846565b9181191691161790565b90565b9061193b6119366119429261081b565b611923565b8254611908565b9055565b5190565b601f602091010490565b1b90565b9190600861197391029161196d5f1984611954565b92611954565b9181191691161790565b919061199361198e61199b9361019a565b611861565b908354611958565b9055565b6119b1916119ab611511565b9161197d565b565b5b8181106119bf575050565b806119cc5f60019361199f565b016119b4565b9190601f81116119e2575b505050565b6119ee611a13936102b1565b9060206119fa8461194a565b83019310611a1b575b611a0c9061194a565b01906119b3565b5f80806119dd565b9150611a0c81929050611a03565b90611a39905f1990600802610872565b191690565b81611a4891611a29565b906002021790565b90611a5a81610458565b9067ffffffffffffffff8211611b1a57611a7e82611a78855461027e565b856119d2565b602090601f8311600114611ab257918091611aa1935f92611aa6575b5050611a3e565b90555b565b90915001515f80611a9a565b601f19831691611ac1856102b1565b925f5b818110611b0257509160029391856001969410611ae8575b50505002019055611aa4565b611af8910151601f841690611a29565b90555f8080611adc565b91936020600181928787015181550195019201611ac4565b61035d565b90611b2991611a50565b565b611b359051610c31565b90565b90611b4460ff91611846565b9181191691161790565b611b5790610c31565b90565b90565b90611b72611b6d611b7992611b4e565b611b5a565b8254611b38565b9055565b611b879051610c65565b90565b60081b90565b90611b9d61ff0091611b8a565b9181191691161790565b611bb090610c65565b90565b90565b90611bcb611bc6611bd292611ba7565b611bb3565b8254611b90565b9055565b611be090516109c7565b90565b611bec906109c7565b90565b90565b90611c07611c02611c0e92611be3565b611bef565b8254611b38565b9055565b90611d6f6101a0600c611d7594611c365f8201611c305f88016118ee565b90611864565b611c4f60018201611c49602088016118fb565b90611926565b611c6860028201611c62604088016118fb565b90611926565b611c8160038201611c7b60608801611946565b90611b1f565b611c9a60048201611c9460808801611946565b90611b1f565b611cb360058201611cad60a088016118ee565b90611864565b611ccc60068201611cc660c088016118ee565b90611864565b611ce560078201611cdf60e088016118ee565b90611864565b611cff60088201611cf96101008801611b2b565b90611b5d565b611d1960088201611d136101208801611b7d565b90611bb6565b611d3360098201611d2d61014088016118ee565b90611864565b611d4d600a8201611d476101608801611946565b90611b1f565b611d67600b8201611d616101808801611946565b90611b1f565b019201611bd6565b90611bf2565b565b90611d8191611c12565b565b90565b5f5260205f2090565b5490565b611d9c81611d8f565b821015611db657611dae600191611d86565b910201905f90565b6101cc565b9081549168010000000000000000831015611deb5782611de3916001611de995018155611d93565b9061197d565b565b61035d565b611e059160208201915f818403910152610470565b90565b9892969097919395949850600288611e1f91611256565b5f01611e2a9061128c565b5f611e34906111a3565b90611e3e906111a3565b14611e4890611622565b855f611e539061164e565b90611e5d90610144565b11611e67906116c3565b8489611e7290610144565b90611e7c90610144565b11611e869061176b565b805f611e919061164e565b90611e9b90610144565b11611ea5906117ed565b611eaf600161025d565b611eb88161182a565b611ec3906001611864565b98899689968a96928a929091925f945f9697989960019b611ee2611884565b809e5f820190611ef191611892565b60200190611efe916118a0565b60408d0190611f0c916118a0565b60608c0190611f1a916118ae565b60808b0190611f28916118ae565b60a08a0190611f3691611892565b60c0890190611f4491611892565b60e0880190611f5291611892565b610100870190611f61916118b1565b610120860190611f70916118bf565b610140850190611f7f91611892565b610160840190611f8e916118ae565b610180830190611f9d916118ae565b6101a0820190611fac916118cd565b600384611fb891610d95565b90611fc291611d77565b600582611fce91610827565b611fd790611d83565b83611fe191611dbb565b829190917fb4aba86f9fc3656c19a28bb18be5c8728b43bebe1bc09856fc32ca4a43d8aaa4906120109061019a565b9161201a9061081b565b92612023610132565b61202e819282611df0565b0390a390565b9061204d9897969594939291612048611511565b611597565b90565b5f7f4e6f7420746865206261746368206f776e657200000000000000000000000000910152565b612084601360209261045c565b61208d81612050565b0190565b6120a69060208101905f818303910152612077565b90565b156120b057565b6120b8610132565b62461bcd60e51b8152806120ce60048201612091565b0390fd5b90612110929161210b816121056120ff6120f960016120f388956003610d95565b01610239565b92610432565b91610432565b146120a9565b612194565b565b5f7f426174636820646f6573206e6f74206578697374000000000000000000000000910152565b612146601460209261045c565b61214f81612112565b0190565b6121689060208101905f818303910152612139565b90565b1561217257565b61217a610132565b62461bcd60e51b81528061219060048201612153565b0390fd5b906121bd92916121b86121b3600c6121ad846003610d95565b01610e19565b61216b565b6121d4565b565b91906121d2905f60208501940190610c49565b565b90506121ee8260086121e860038590610d95565b01611b5d565b61222d61221b7fb8a3401adfc11253c3aff18e4b48103cec45c852b9afc487c23f32e26746242c9261019a565b92612224610132565b918291826121bf565b0390a2565b9061223d92916120d2565b565b90612267929161226261225d60026122573382611256565b01610e19565b61156e565b612269565b565b90612292929161228d612288600c612282846003610d95565b01610e19565b61216b565b6122b0565b565b90565b5190565b91906122ae905f60208501940190610c7d565b565b90916122ca8360086122c460038690610d95565b01611bb6565b6122db6122d682612294565b612297565b6122ed6122e75f61164e565b91610144565b11612343575b50339061233e61232c6123267f76826af0a60f79614c94f6c8a71ac318e3d8e9e7dc244b499e786db3c1f549d49361019a565b9361081b565b93612335610132565b9182918261229b565b0390a3565b61235b90600b61235560038590610d95565b01611b1f565b5f6122f3565b9061236c929161223f565b565b5f90565b600261238a6123909261238361236e565b5082611256565b01610e19565b90565b606090565b60209181520190565b6123ab9054610249565b90565b60010190565b906123d16123cb6123c48461083d565b8093612398565b92610841565b905f5b8181106123e15750505090565b9091926124016123fb6001926123f6876123a1565b610a43565b946123ae565b91019190916123d4565b90612415916123b4565b90565b9061243861243192612428610132565b9384809261240b565b0383610371565b565b61244390612418565b90565b61245d61246291612455612393565b506005610827565b61243a565b90565b906124a5949392916124a08161249a61249461248e600161248888956003610d95565b01610239565b92610432565b91610432565b146120a9565b6124a7565b565b906124d2949392916124cd6124c8600c6124c2846003610d95565b01610e19565b61216b565b612667565b565b5f7f5265636569766572206e6f742076657269666965640000000000000000000000910152565b612508601560209261045c565b612511816124d4565b0190565b61252a9060208101905f8183039101526124fb565b90565b1561253457565b61253c610132565b62461bcd60e51b81528061255260048201612515565b0390fd5b90565b90565b61256660a0610557565b90565b5f5260205f2090565b5490565b61257f81612572565b82101561259957612591600591612569565b910201905f90565b6101cc565b906126146080600461261a946125c15f82016125bb5f88016118fb565b90611926565b6125da600182016125d4602088016118fb565b90611926565b6125f3600282016125ed604088016118ee565b90611864565b61260c60038201612606606088016118ee565b90611864565b019201611946565b90611b1f565b565b919061262d5761262b9161259e565b565b6118db565b9081549168010000000000000000831015612662578261265a91600161266095018155612576565b9061261c565b565b61035d565b9050612687612682600261267c818690611256565b01610e19565b61252d565b6126a38361269d6126975f61164e565b91610144565b116117ed565b6127666126ba6126b560038490610d95565b612556565b946126e36126ca60018801610239565b966126d88660018301611926565b600860019101611b5d565b6127016126fa6126f560058790610827565b611d83565b8490611dbb565b612715612710600485906101b6565b612559565b6127618792612758879161274f426127468c939561273d61273461255c565b9a5f8c016118a0565b60208a016118a0565b60408801611892565b60608601611892565b608084016118ae565b612632565b929091926127bb6127a96127a361279d7f516c8b339c132041f2a10d0e873c5eaf4944299c02b458d7491b7f7ac1574d2f9461019a565b9461081b565b9461081b565b946127b2610132565b918291826106e2565b0390a4565b906127cd94939291612465565b565b5f90565b606090565b5f90565b5f90565b908161283361282e6128389f9e9d9c9b9a9998979695948f8f908f918f928f938f948f958f968f978f988f998f9a6128289b600c9d5050505050505050505050506003610d95565b01610e19565b61216b565b612852565b909192939495969798999a9b565b61284f9061039a565b90565b916128789b999795939161287d9d9b999795935050505050505050505050506003610d95565b612556565b9061288a60018301610239565b9061289760028401610239565b92600381019260048201926128ae6005840161025d565b926128bb6006820161025d565b926128c86007830161025d565b926128d560088401610dc5565b926128e260088201610df2565b926128ef6009830161025d565b9261292461291e61291261290c600b600a88019701959f9e612846565b9c612846565b9a999897969594612846565b92612846565b90565b612996906129336127cf565b61293b6127cf565b6129436127d3565b61294b6127d3565b612953611511565b61295b611511565b612963611511565b9061296c6127d8565b926129756127dc565b9461297e611511565b966129876127d3565b986129906127d3565b9a6127e0565b909192939495969798999a9b565b606090565b906129d1916129cc6129c7600c6129c1856003610d95565b01610e19565b61216b565b612afd565b90565b67ffffffffffffffff81116129ec5760208091020190565b61035d565b90612a036129fe836129d4565b610557565b918252565b612a1260a0610557565b90565b90612a94612a8b6004612a26612a08565b94612a3d612a355f8301610239565b5f88016118a0565b612a55612a4c60018301610239565b602088016118a0565b612a6d612a646002830161025d565b60408801611892565b612a85612a7c6003830161025d565b60608801611892565b0161039a565b608084016118ae565b565b612a9f90612a15565b90565b90612aac826101e0565b612ab5816129f1565b92612ac360208501916101e4565b5f915b838310612ad35750505050565b60056020600192612ae385612a96565b815201920192019190612ac6565b612afa90612aa2565b90565b612b1291612b0d915060046101b6565b612af1565b90565b612b2690612b216129a4565b6129a9565b90565b5f90565b90565b612b6b612b7091612b3f612b29565b50612b486127d3565b50612b5161236e565b50612b5a611511565b50612b636127d3565b506002611256565b612b2d565b90612b7c5f830161128c565b916001810192612b8e60028301610e19565b92612bb4612bac6004612ba36003870161025d565b95019396612846565b949392612846565b90565b60207f6f6e000000000000000000000000000000000000000000000000000000000000917f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201520152565b612c11602260409261045c565b612c1a81612bb7565b0190565b612c339060208101905f818303910152612c04565b90565b15612c3d57565b612c45610132565b62461bcd60e51b815280612c5b60048201612c1e565b0390fd5b90612c8f939291612c8a33612c84612c7e612c795f610239565b610432565b91610432565b14612c36565b612eea565b565b612ca5612ca0612caa9261164b565b610197565b610427565b90565b612cb690612c91565b90565b5f7f496e76616c696420616464726573730000000000000000000000000000000000910152565b612ced600f60209261045c565b612cf681612cb9565b0190565b612d0f9060208101905f818303910152612ce0565b90565b15612d1957565b612d21610132565b62461bcd60e51b815280612d3760048201612cfa565b0390fd5b5f7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000910152565b612d6f601460209261045c565b612d7881612d3b565b0190565b612d919060208101905f818303910152612d62565b90565b15612d9b57565b612da3610132565b62461bcd60e51b815280612db960048201612d7c565b0390fd5b612dc760c0610557565b90565b90612dd4906111a3565b9052565b612de290516111a3565b90565b60a01b90565b90612dfa60ff60a01b91612de5565b9181191691161790565b612e0d906111a3565b90565b90565b90612e28612e23612e2f92612e04565b612e10565b8254612deb565b9055565b90612ec160a06004612ec794612e565f8201612e505f88016118fb565b90611926565b612e6e5f8201612e6860208801612dd8565b90612e13565b612e8760018201612e8160408801611946565b90611b1f565b612ea060028201612e9a60608801611bd6565b90611bf2565b612eb960038201612eb3608088016118ee565b90611864565b019201611946565b90611b1f565b565b90612ed391612e33565b565b9190612ee8905f602085019401906111bb565b565b9192612f9c612fad9294612f1985612f12612f0c612f075f612cad565b610432565b91610432565b1415612d12565b612f45612f2d612f2883612294565b612297565b612f3f612f395f61164e565b91610144565b11612d94565b612f938593612f8a8893612f81600191612f78429597612f6f612f66612dbd565b9b5f8d016118a0565b60208b01612dca565b604089016118ae565b606087016118cd565b60808501611892565b60a083016118ae565b612fa860028490611256565b612ec9565b612fec612fda7f9f192d90f005c1163e866a86163fcf3aa01231f40671da1959d438410ae6c82c9261081b565b92612fe3610132565b91829182612ed5565b0390a2565b90612ffd939291612c5f565b565b61302c906130273361302161301b6130165f610239565b610432565b91610432565b14612c36565b6130b0565b565b5f7f496e76616c69642061646d696e20616464726573730000000000000000000000910152565b613062601560209261045c565b61306b8161302e565b0190565b6130849060208101905f818303910152613055565b90565b1561308e57565b613096610132565b62461bcd60e51b8152806130ac6004820161306f565b0390fd5b6130df906130d9816130d26130cc6130c75f612cad565b610432565b91610432565b1415613087565b5f611926565b565b6130ea90612fff565b56fea26469706673582212200e4a6d830b6c4f55e4e7cd7ae2dd736d915bb0af2807739839722e15ce6ce30864736f6c634300081e0033";

type AgriculturalSupplyChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgriculturalSupplyChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgriculturalSupplyChain__factory extends ContractFactory {
  constructor(...args: AgriculturalSupplyChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgriculturalSupplyChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AgriculturalSupplyChain__factory {
    return super.connect(runner) as AgriculturalSupplyChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgriculturalSupplyChainInterface {
    return new Interface(_abi) as AgriculturalSupplyChainInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgriculturalSupplyChain {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AgriculturalSupplyChain;
  }
}
