/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AgriculturalSupplyChain,
  AgriculturalSupplyChainInterface,
} from "../AgriculturalSupplyChain";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchTransactions",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createProductBatch",
    inputs: [
      {
        name: "_farmerAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "_productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "_quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "_qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBatchDetails",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchTransactions",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct AgriculturalSupplyChain.Transaction[]",
        components: [
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "timestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "transactionHash",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderBatches",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStakeholderDetails",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isVerifiedStakeholder",
    inputs: [
      {
        name: "_stakeholder",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextBatchId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "productBatches",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "currentOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "farmer",
        type: "address",
        internalType: "address",
      },
      {
        name: "productName",
        type: "string",
        internalType: "string",
      },
      {
        name: "productType",
        type: "string",
        internalType: "string",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "harvestDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiryDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
      {
        name: "qualityGrade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "basePrice",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "qualityHash",
        type: "string",
        internalType: "string",
      },
      {
        name: "exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerStakeholder",
    inputs: [
      {
        name: "_stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeholderBatches",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakeholders",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "stakeholderAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "isVerified",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "registrationTime",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataHash",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferBatch",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_from",
        type: "address",
        internalType: "address",
      },
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_transactionHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "updateAdmin",
    inputs: [
      {
        name: "_newAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateProductStatus",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_status",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyQuality",
    inputs: [
      {
        name: "_batchId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_grade",
        type: "uint8",
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "_newQualityHash",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ProductBatchCreated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "farmer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "productType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductStatusUpdated",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "status",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.ProductStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ProductTransferred",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QualityVerified",
    inputs: [
      {
        name: "batchId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "grade",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.QualityGrade",
      },
      {
        name: "verifier",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StakeholderRegistered",
    inputs: [
      {
        name: "stakeholder",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "role",
        type: "uint8",
        indexed: false,
        internalType: "enum AgriculturalSupplyChain.StakeholderRole",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040523461002757610011610132565b61001961002c565b6131fb61015382396131fb90f35b610032565b60405190565b5f80fd5b5f1b90565b9061004c60018060a01b0391610036565b9181191691161790565b60018060a01b031690565b90565b61007861007361007d92610056565b610061565b610056565b90565b61008990610064565b90565b61009590610080565b90565b90565b906100b06100ab6100b79261008c565b610098565b825461003b565b9055565b90565b90565b6100d56100d06100da926100bb565b610061565b6100be565b90565b906100e95f1991610036565b9181191691161790565b61010761010261010c926100be565b610061565b6100be565b90565b90565b9061012761012261012e926100f3565b61010f565b82546100dd565b9055565b61013c335f61009b565b61015061014960016100c1565b6001610112565b56fe60806040526004361015610013575b611503565b61001d5f3561012c565b80631bd9baac146101275780633297146b146101225780636a7f1fcb1461011d5780636b396d98146101185780636b5a3a2b146101135780636fde54651461010e5780638369a64f146101095780638462a7f81461010457806393858107146100ff5780639d47dcc0146100fa578063a7fede55146100f5578063aaddba58146100f0578063ae51cef9146100eb578063c07cfca9146100e6578063d40d51b8146100e1578063e2f273bd146100dc5763f851a4400361000e576114ce565b611452565b61141b565b61134b565b611213565b611155565b610fc6565b610d46565b610bb9565b610b15565b610ac2565b6109ee565b610975565b6108d1565b610792565b6106f7565b6104f2565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61015081610144565b0361015757565b5f80fd5b9050359061016882610147565b565b9190604083820312610192578061018661018f925f860161015b565b9360200161015b565b90565b61013c565b90565b6101ae6101a96101b392610144565b610197565b610144565b90565b906101c09061019a565b5f5260205260405f2090565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b6101f6816101e0565b821015610210576102086005916101e4565b910201905f90565b6101cc565b5f1c90565b60018060a01b031690565b61023161023691610215565b61021a565b90565b6102439054610225565b90565b90565b61025561025a91610215565b610246565b90565b6102679054610249565b90565b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801561029e575b602083101461029957565b61026a565b91607f169161028e565b60209181520190565b5f5260205f2090565b905f92918054906102d46102cd8361027e565b80946102a8565b916001811690815f1461032b57506001146102ef575b505050565b6102fc91929394506102b1565b915f925b81841061031357505001905f80806102ea565b60018160209295939554848601520191019290610300565b92949550505060ff19168252151560200201905f80806102ea565b90610350916102ba565b90565b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061037b90610353565b810190811067ffffffffffffffff82111761039557604052565b61035d565b906103ba6103b3926103aa610132565b93848092610346565b0383610371565b565b6103c79060046101b6565b906103d1826101e0565b811015610423576103e1916101ed565b506103ed5f8201610239565b916103fa60018301610239565b916104076002820161025d565b9161042060046104196003850161025d565b930161039a565b90565b5f80fd5b60018060a01b031690565b61043b90610427565b90565b61044790610432565b9052565b61045490610144565b9052565b5190565b60209181520190565b90825f9392825e0152565b61048f61049860209361049d9361048681610458565b9384809361045c565b95869101610465565b610353565b0190565b91936104d86104ef96946104ce6104e294976104c460a08801995f89019061043e565b602087019061043e565b604085019061044b565b606083019061044b565b6080818403910152610470565b90565b346105275761052361050e61050836600461016a565b906103bc565b9161051a959395610132565b958695866104a1565b0390f35b610138565b61053581610432565b0361053c57565b5f80fd5b9050359061054d8261052c565b565b5f80fd5b5f80fd5b9061056a610563610132565b9283610371565b565b67ffffffffffffffff811161058a57610586602091610353565b0190565b61035d565b90825f939282370152565b909291926105af6105aa8261056c565b610557565b938185526020850190828401116105cb576105c99261058f565b565b610553565b9080601f830112156105ee578160206105eb9335910161059a565b90565b61054f565b91610120838303126106dd5761060b825f8501610540565b92602081013567ffffffffffffffff81116106d8578361062c9183016105d0565b92604082013567ffffffffffffffff81116106d3578161064d9184016105d0565b9261065b826060850161015b565b92610669836080830161015b565b926106778160a0840161015b565b926106858260c0850161015b565b9260e081013567ffffffffffffffff81116106ce57836106a69183016105d0565b9261010082013567ffffffffffffffff81116106c9576106c692016105d0565b90565b610140565b610140565b610140565b610140565b61013c565b91906106f5905f6020850194019061044b565b565b346107315761072d61071c61070d3660046105f3565b9796909695919594929461202b565b610724610132565b918291826106e2565b0390f35b610138565b6004111561074057565b5f80fd5b9050359061075182610736565b565b90916060828403126107885761078561076e845f850161015b565b9361077c8160208601610540565b93604001610744565b90565b61013c565b5f0190565b346107c1576107ab6107a5366004610753565b91612229565b6107b3610132565b806107bd8161078d565b0390f35b610138565b91906040838203126107ee57806107e26107eb925f8601610540565b9360200161015b565b90565b61013c565b61080761080261080c92610427565b610197565b610427565b90565b610818906107f3565b90565b6108249061080f565b90565b906108319061081b565b5f5260205260405f2090565b5490565b5f5260205f2090565b6108538161083d565b82101561086d57610865600191610841565b910201905f90565b6101cc565b1c90565b61088690600861088b9302610872565b610246565b90565b906108999154610876565b90565b6108a7906005610827565b6108b08161083d565b8210156108cd576108ca916108c49161084a565b9061088e565b90565b5f80fd5b34610902576108fe6108ed6108e73660046107c6565b9061089c565b6108f5610132565b918291826106e2565b0390f35b610138565b6004111561091157565b5f80fd5b9050359061092282610907565b565b916060838303126109705761093b825f850161015b565b926109498360208301610915565b92604082013567ffffffffffffffff811161096b5761096892016105d0565b90565b610140565b61013c565b346109a45761098e610988366004610924565b91612359565b610996610132565b806109a08161078d565b0390f35b610138565b906020828203126109c2576109bf915f01610540565b90565b61013c565b151590565b6109d5906109c7565b9052565b91906109ec905f602085019401906109cc565b565b34610a1e57610a1a610a09610a043660046109a9565b61236a565b610a11610132565b918291826109d9565b0390f35b610138565b5190565b60209181520190565b60200190565b610a3f90610144565b9052565b90610a5081602093610a36565b0190565b60200190565b90610a77610a71610a6a84610a23565b8093610a27565b92610a30565b905f5b818110610a875750505090565b909192610aa0610a9a6001928651610a43565b94610a54565b9101919091610a7a565b610abf9160208201915f818403910152610a5a565b90565b34610af257610aee610add610ad83660046109a9565b61243e565b610ae5610132565b91829182610aaa565b0390f35b610138565b5f910312610b0157565b61013c565b610b1260015f9061088e565b90565b34610b4557610b25366004610af7565b610b41610b30610b06565b610b38610132565b918291826106e2565b0390f35b610138565b91909160a081840312610bb457610b63835f830161015b565b92610b718160208401610540565b92610b7f8260408501610540565b92610b8d836060830161015b565b92608082013567ffffffffffffffff8111610baf57610bac92016105d0565b90565b610140565b61013c565b610bd0610bc7366004610b4a565b93929092612899565b610bd8610132565b80610be28161078d565b0390f35b90602082820312610bff57610bfc915f0161015b565b90565b61013c565b634e487b7160e01b5f52602160045260245ffd5b60041115610c2257565b610c04565b90610c3182610c18565b565b610c3c90610c27565b90565b610c4890610c33565b9052565b60041115610c5657565b610c04565b90610c6582610c4c565b565b610c7090610c5b565b90565b610c7c90610c67565b9052565b9a96610d0690610cfc610d2698610d439f9d989b948f610cf5610d349f99610d1b9b610cdc60a095610cea93610ccf610d109e610cc56101808a01945f8b019061043e565b602089019061043e565b8682036040880152610470565b908482036060860152610470565b9e608083019061044b565b019061044b565b60c08d019061044b565b60e08b0190610c3f565b610100890190610c73565b61012087019061044b565b848203610140860152610470565b91610160818403910152610470565b90565b34610d8657610d82610d61610d5c366004610be6565b612a00565b98610d799c9a9c989198979297969396959495610132565b9c8d9c8d610c80565b0390f35b610138565b90610d959061019a565b5f5260205260405f2090565b60ff1690565b610db3610db891610215565b610da1565b90565b610dc59054610da7565b90565b60081c90565b60ff1690565b610de0610de591610dc8565b610dce565b90565b610df29054610dd4565b90565b60ff1690565b610e07610e0c91610215565b610df5565b90565b610e199054610dfb565b90565b610e27906003610d8b565b90610e335f830161025d565b91610e4060018201610239565b91610e4d60028301610239565b91610e5a6003820161039a565b91610e676004830161039a565b91610e746005820161025d565b91610e816006830161025d565b91610e8e6007820161025d565b91610e9b60088301610dbb565b91610ea860088201610de8565b91610eb56009830161025d565b91610ec2600a820161039a565b91610edb600c610ed4600b850161039a565b9301610e0f565b90565b9e9d9b95968f90610fc49e9a610f82610fad9b6101a09f98610fbc9f9794610f6e610f63610f9f9d610f556101209b610f7896610f949f610f479060408f610f8d9f610f4090610f366101c08401985f85019061044b565b602083019061043e565b019061043e565b8c6060818403910152610470565b908a820360808c0152610470565b9e60a089019061044b565b60c087019061044b565b60e085019061044b565b610100830190610c3f565b0190610c73565b6101408c019061044b565b8982036101608b0152610470565b90878203610180890152610470565b9401906109cc565b565b3461100957611005610fe1610fdc366004610be6565b610e1c565b9a610ffc9e9c9e9a919a999299989398979497969596610132565b9e8f9e8f610ede565b0390f35b610138565b5190565b60209181520190565b60200190565b61102a90610432565b9052565b61104d61105660209361105b9361104481610458565b938480936102a8565b95869101610465565b610353565b0190565b6110c091608060a082019261107a5f8201515f850190611021565b61108c60208201516020850190611021565b61109e60408201516040850190610a36565b6110b060608201516060850190610a36565b015190608081840391015261102e565b90565b906110cd9161105f565b90565b60200190565b906110ea6110e38361100e565b8092611012565b90816110fb6020830284019461101b565b925f915b83831061110e57505050505090565b9091929394602061113061112a838560019503875289516110c3565b976110d0565b93019301919392906110ff565b6111529160208201915f8184039101526110d6565b90565b346111855761118161117061116b366004610be6565b612bee565b611178610132565b9182918261113d565b0390f35b610138565b6004111561119457565b610c04565b906111a38261118a565b565b6111ae90611199565b90565b6111ba906111a5565b9052565b91936111f96111ee611203936112109896976111e160a08801925f8901906111b1565b8682036020880152610470565b9560408501906109cc565b606083019061044b565b6080818403910152610470565b90565b346112475761124361122e6112293660046109a9565b612c09565b9161123a959395610132565b958695866111be565b0390f35b610138565b906112569061081b565b5f5260205260405f2090565b60a01c90565b60ff1690565b61127a61127f91611262565b611268565b90565b61128c905461126e565b90565b61129a90600261124c565b906112a65f8301610239565b916112b25f8201611282565b916112bf6001830161039a565b916112cc60028201610e0f565b916112e560046112de6003850161025d565b930161039a565b90565b92611326611348979596926113319261131961133b9661130f60c08a01945f8b019061043e565b60208901906111b1565b8682036040880152610470565b9560608501906109cc565b608083019061044b565b60a0818403910152610470565b90565b346113825761137e6113666113613660046109a9565b61128f565b92611375969496929192610132565b968796876112e8565b0390f35b610138565b6004111561139157565b5f80fd5b905035906113a282611387565b565b90608082820312611416576113bb815f8401610540565b926113c98260208501611395565b92604081013567ffffffffffffffff811161141157836113ea9183016105d0565b92606082013567ffffffffffffffff811161140c5761140992016105d0565b90565b610140565b610140565b61013c565b3461144d5761143761142e3660046113a4565b929190916130ca565b61143f610132565b806114498161078d565b0390f35b610138565b346114805761146a6114653660046109a9565b6131ba565b611472610132565b8061147c8161078d565b0390f35b610138565b61149590600861149a9302610872565b61021a565b90565b906114a89154611485565b90565b6114b65f5f9061149d565b90565b91906114cc905f6020850194019061043e565b565b346114fe576114de366004610af7565b6114fa6114e96114ab565b6114f1610132565b918291826114b9565b0390f35b610138565b5f80fd5b5f90565b5f7f5374616b65686f6c646572206e6f742076657269666965640000000000000000910152565b61153f601860209261045c565b6115488161150b565b0190565b6115619060208101905f818303910152611532565b90565b1561156b57565b611573610132565b62461bcd60e51b8152806115896004820161154c565b0390fd5b906115bd9998979695949392916115b86115b360026115ad81339061124c565b01610e0f565b611564565b611dff565b90565b5f7f4f6e6c79206661726d6572732063616e20637265617465206261746368657300910152565b6115f4601f60209261045c565b6115fd816115c0565b0190565b6116169060208101905f8183039101526115e7565b90565b1561162057565b611628610132565b62461bcd60e51b81528061163e60048201611601565b0390fd5b90565b61165961165461165e92611642565b610197565b610144565b90565b5f7f5175616e74697479206d7573742062652067726561746572207468616e203000910152565b611695601f60209261045c565b61169e81611661565b0190565b6116b79060208101905f818303910152611688565b90565b156116c157565b6116c9610132565b62461bcd60e51b8152806116df600482016116a2565b0390fd5b60207f7420646174650000000000000000000000000000000000000000000000000000917f4578706972792064617465206d757374206265206166746572206861727665735f8201520152565b61173d602660409261045c565b611746816116e3565b0190565b61175f9060208101905f818303910152611730565b90565b1561176957565b611771610132565b62461bcd60e51b8152806117876004820161174a565b0390fd5b5f7f5072696365206d7573742062652067726561746572207468616e203000000000910152565b6117bf601c60209261045c565b6117c88161178b565b0190565b6117e19060208101905f8183039101526117b2565b90565b156117eb57565b6117f3610132565b62461bcd60e51b815280611809600482016117cc565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b61182a90610144565b5f1981146118385760010190565b61180d565b5f1b90565b9061184e5f199161183d565b9181191691161790565b90565b9061187061186b6118779261019a565b611858565b8254611842565b9055565b6118866101c0610557565b90565b9061189390610144565b9052565b906118a190610432565b9052565b52565b906118b290610c27565b9052565b906118c090610c5b565b9052565b906118ce906109c7565b9052565b634e487b7160e01b5f525f60045260245ffd5b6118ef9051610144565b90565b6118fc9051610432565b90565b9061191060018060a01b039161183d565b9181191691161790565b90565b9061193261192d6119399261081b565b61191a565b82546118ff565b9055565b5190565b601f602091010490565b1b90565b9190600861196a9102916119645f198461194b565b9261194b565b9181191691161790565b919061198a6119856119929361019a565b611858565b90835461194f565b9055565b6119a8916119a2611507565b91611974565b565b5b8181106119b6575050565b806119c35f600193611996565b016119ab565b9190601f81116119d9575b505050565b6119e5611a0a936102b1565b9060206119f184611941565b83019310611a12575b611a0390611941565b01906119aa565b5f80806119d4565b9150611a03819290506119fa565b90611a30905f1990600802610872565b191690565b81611a3f91611a20565b906002021790565b90611a5181610458565b9067ffffffffffffffff8211611b1157611a7582611a6f855461027e565b856119c9565b602090601f8311600114611aa957918091611a98935f92611a9d575b5050611a35565b90555b565b90915001515f80611a91565b601f19831691611ab8856102b1565b925f5b818110611af957509160029391856001969410611adf575b50505002019055611a9b565b611aef910151601f841690611a20565b90555f8080611ad3565b91936020600181928787015181550195019201611abb565b61035d565b90611b2091611a47565b565b611b2c9051610c27565b90565b90611b3b60ff9161183d565b9181191691161790565b611b4e90610c27565b90565b90565b90611b69611b64611b7092611b45565b611b51565b8254611b2f565b9055565b611b7e9051610c5b565b90565b60081b90565b90611b9461ff0091611b81565b9181191691161790565b611ba790610c5b565b90565b90565b90611bc2611bbd611bc992611b9e565b611baa565b8254611b87565b9055565b611bd790516109c7565b90565b611be3906109c7565b90565b90565b90611bfe611bf9611c0592611bda565b611be6565b8254611b2f565b9055565b90611d666101a0600c611d6c94611c2d5f8201611c275f88016118e5565b9061185b565b611c4660018201611c40602088016118f2565b9061191d565b611c5f60028201611c59604088016118f2565b9061191d565b611c7860038201611c726060880161193d565b90611b16565b611c9160048201611c8b6080880161193d565b90611b16565b611caa60058201611ca460a088016118e5565b9061185b565b611cc360068201611cbd60c088016118e5565b9061185b565b611cdc60078201611cd660e088016118e5565b9061185b565b611cf660088201611cf06101008801611b22565b90611b54565b611d1060088201611d0a6101208801611b74565b90611bad565b611d2a60098201611d2461014088016118e5565b9061185b565b611d44600a8201611d3e610160880161193d565b90611b16565b611d5e600b8201611d58610180880161193d565b90611b16565b019201611bcd565b90611be9565b565b90611d7891611c09565b565b90565b5f5260205f2090565b5490565b611d9381611d86565b821015611dad57611da5600191611d7d565b910201905f90565b6101cc565b9081549168010000000000000000831015611de25782611dda916001611de095018155611d8a565b90611974565b565b61035d565b611dfc9160208201915f818403910152610470565b90565b9892969097919395949850600288611e169161124c565b5f01611e2190611282565b5f611e2b90611199565b90611e3590611199565b14611e3f90611619565b855f611e4a90611645565b90611e5490610144565b11611e5e906116ba565b8489611e6990610144565b90611e7390610144565b11611e7d90611762565b805f611e8890611645565b90611e9290610144565b11611e9c906117e4565b611ea6600161025d565b611eaf81611821565b611eba90600161185b565b98899689968a96928a929091925f945f9697989960019b611ed961187b565b809e5f820190611ee891611889565b60200190611ef591611897565b60408d0190611f0391611897565b60608c0190611f11916118a5565b60808b0190611f1f916118a5565b60a08a0190611f2d91611889565b60c0890190611f3b91611889565b60e0880190611f4991611889565b610100870190611f58916118a8565b610120860190611f67916118b6565b610140850190611f7691611889565b610160840190611f85916118a5565b610180830190611f94916118a5565b6101a0820190611fa3916118c4565b600384611faf91610d8b565b90611fb991611d6e565b600582611fc591610827565b611fce90611d7a565b83611fd891611db2565b829190917fb4aba86f9fc3656c19a28bb18be5c8728b43bebe1bc09856fc32ca4a43d8aaa4906120079061019a565b916120119061081b565b9261201a610132565b612025819282611de7565b0390a390565b90612044989796959493929161203f611507565b61158d565b90565b5f7f4e6f7420746865206261746368206f776e657200000000000000000000000000910152565b61207b601360209261045c565b61208481612047565b0190565b61209d9060208101905f81830391015261206e565b90565b156120a757565b6120af610132565b62461bcd60e51b8152806120c560048201612088565b0390fd5b906121079291612102816120fc6120f66120f060016120ea88956003610d8b565b01610239565b92610432565b91610432565b146120a0565b61218b565b565b5f7f426174636820646f6573206e6f74206578697374000000000000000000000000910152565b61213d601460209261045c565b61214681612109565b0190565b61215f9060208101905f818303910152612130565b90565b1561216957565b612171610132565b62461bcd60e51b8152806121876004820161214a565b0390fd5b906121b492916121af6121aa600c6121a4846003610d8b565b01610e0f565b612162565b6121cb565b565b91906121c9905f60208501940190610c3f565b565b90506121e58260086121df60038590610d8b565b01611b54565b6122246122127fb8a3401adfc11253c3aff18e4b48103cec45c852b9afc487c23f32e26746242c9261019a565b9261221b610132565b918291826121b6565b0390a2565b9061223492916120c9565b565b9061225f929161225a612255600261224f81339061124c565b01610e0f565b611564565b612261565b565b9061228a9291612285612280600c61227a846003610d8b565b01610e0f565b612162565b6122a8565b565b90565b5190565b91906122a6905f60208501940190610c73565b565b90916122c28360086122bc60038690610d8b565b01611bad565b6122d36122ce8261228c565b61228f565b6122e56122df5f611645565b91610144565b1161233b575b50339061233661232461231e7f76826af0a60f79614c94f6c8a71ac318e3d8e9e7dc244b499e786db3c1f549d49361019a565b9361081b565b9361232d610132565b91829182612293565b0390a3565b61235390600b61234d60038590610d8b565b01611b16565b5f6122eb565b906123649291612236565b565b5f90565b60026123826123889261237b612366565b508261124c565b01610e0f565b90565b606090565b60209181520190565b6123a39054610249565b90565b60010190565b906123c96123c36123bc8461083d565b8093612390565b92610841565b905f5b8181106123d95750505090565b9091926123f96123f36001926123ee87612399565b610a43565b946123a6565b91019190916123cc565b9061240d916123ac565b90565b9061243061242992612420610132565b93848092612403565b0383610371565b565b61243b90612410565b90565b61245561245a9161244d61238b565b506005610827565b612432565b90565b9061249d949392916124988161249261248c612486600161248088956003610d8b565b01610239565b92610432565b91610432565b146120a0565b61249f565b565b906124ca949392916124c56124c0600c6124ba846003610d8b565b01610e0f565b612162565b6126b8565b565b5f7f5265636569766572206e6f742076657269666965640000000000000000000000910152565b612500601560209261045c565b612509816124cc565b0190565b6125229060208101905f8183039101526124f3565b90565b1561252c57565b612534610132565b62461bcd60e51b81528061254a6004820161250d565b0390fd5b90565b90565b61255e60a0610557565b90565b5f5260205f2090565b5490565b6125778161256a565b82101561259157612589600591612561565b910201905f90565b6101cc565b9061260c60806004612612946125b95f82016125b35f88016118f2565b9061191d565b6125d2600182016125cc602088016118f2565b9061191d565b6125eb600282016125e5604088016118e5565b9061185b565b612604600382016125fe606088016118e5565b9061185b565b01920161193d565b90611b16565b565b91906126255761262391612596565b565b6118d2565b908154916801000000000000000083101561265a57826126529160016126589501815561256e565b90612614565b565b61035d565b612668906107f3565b90565b6126749061265f565b90565b6126809061080f565b90565b61268b610132565b3d5f823e3d90fd5b6126a26126a891939293610144565b92610144565b82039182116126b357565b61180d565b90506126d86126d360026126cd81869061124c565b01610e0f565b612525565b6126f4836126ee6126e85f611645565b91610144565b116117e4565b6127b761270b61270660038490610d8b565b61254e565b9461273461271b60018801610239565b96612729866001830161191d565b600860019101611b54565b61275261274b61274660058790610827565b611d7a565b8490611db2565b612766612761600485906101b6565b612551565b6127b287926127a987916127a0426127978c939561278e612785612554565b9a5f8c01611897565b60208a01611897565b60408801611889565b60608601611889565b608084016118a5565b61262a565b5f8080806127cc6127c78961266b565b612677565b8790828215612890575bf11561288b57346127ef6127e985610144565b91610144565b1161284f575b9290919261284a61283861283261282c7f516c8b339c132041f2a10d0e873c5eaf4944299c02b458d7491b7f7ac1574d2f9461019a565b9461081b565b9461081b565b94612841610132565b918291826106e2565b0390a4565b5f80808061286461285f3361266b565b612677565b61286f348990612693565b90828215612882575bf16127f557612683565b506108fc612878565b612683565b506108fc6127d6565b906128a69493929161245d565b565b5f90565b606090565b5f90565b5f90565b908161290c6129076129119f9e9d9c9b9a9998979695948f8f908f918f928f938f948f958f968f978f988f998f9a6129019b600c9d5050505050505050505050506003610d8b565b01610e0f565b612162565b61292b565b909192939495969798999a9b565b6129289061039a565b90565b916129519b99979593916129569d9b999795935050505050505050505050506003610d8b565b61254e565b9061296360018301610239565b9061297060028401610239565b92600381019260048201926129876005840161025d565b926129946006820161025d565b926129a16007830161025d565b926129ae60088401610dbb565b926129bb60088201610de8565b926129c86009830161025d565b926129fd6129f76129eb6129e5600b600a88019701959f9e61291f565b9c61291f565b9a99989796959461291f565b9261291f565b90565b612a6f90612a0c6128a8565b612a146128a8565b612a1c6128ac565b612a246128ac565b612a2c611507565b612a34611507565b612a3c611507565b90612a456128b1565b92612a4e6128b5565b94612a57611507565b96612a606128ac565b98612a696128ac565b9a6128b9565b909192939495969798999a9b565b606090565b90612aaa91612aa5612aa0600c612a9a856003610d8b565b01610e0f565b612162565b612bd6565b90565b67ffffffffffffffff8111612ac55760208091020190565b61035d565b90612adc612ad783612aad565b610557565b918252565b612aeb60a0610557565b90565b90612b6d612b646004612aff612ae1565b94612b16612b0e5f8301610239565b5f8801611897565b612b2e612b2560018301610239565b60208801611897565b612b46612b3d6002830161025d565b60408801611889565b612b5e612b556003830161025d565b60608801611889565b0161039a565b608084016118a5565b565b612b7890612aee565b90565b90612b85826101e0565b612b8e81612aca565b92612b9c60208501916101e4565b5f915b838310612bac5750505050565b60056020600192612bbc85612b6f565b815201920192019190612b9f565b612bd390612b7b565b90565b612beb91612be6915060046101b6565b612bca565b90565b612bff90612bfa612a7d565b612a82565b90565b5f90565b90565b612c44612c4991612c18612c02565b50612c216128ac565b50612c2a612366565b50612c33611507565b50612c3c6128ac565b50600261124c565b612c06565b90612c555f8301611282565b916001810192612c6760028301610e0f565b92612c8d612c856004612c7c6003870161025d565b9501939661291f565b94939261291f565b90565b60207f6f6e000000000000000000000000000000000000000000000000000000000000917f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201520152565b612cea602260409261045c565b612cf381612c90565b0190565b612d0c9060208101905f818303910152612cdd565b90565b15612d1657565b612d1e610132565b62461bcd60e51b815280612d3460048201612cf7565b0390fd5b90612d68939291612d6333612d5d612d57612d525f610239565b610432565b91610432565b14612d0f565b612fc3565b565b612d7e612d79612d8392611642565b610197565b610427565b90565b612d8f90612d6a565b90565b5f7f496e76616c696420616464726573730000000000000000000000000000000000910152565b612dc6600f60209261045c565b612dcf81612d92565b0190565b612de89060208101905f818303910152612db9565b90565b15612df257565b612dfa610132565b62461bcd60e51b815280612e1060048201612dd3565b0390fd5b5f7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000910152565b612e48601460209261045c565b612e5181612e14565b0190565b612e6a9060208101905f818303910152612e3b565b90565b15612e7457565b612e7c610132565b62461bcd60e51b815280612e9260048201612e55565b0390fd5b612ea060c0610557565b90565b90612ead90611199565b9052565b612ebb9051611199565b90565b60a01b90565b90612ed360ff60a01b91612ebe565b9181191691161790565b612ee690611199565b90565b90565b90612f01612efc612f0892612edd565b612ee9565b8254612ec4565b9055565b90612f9a60a06004612fa094612f2f5f8201612f295f88016118f2565b9061191d565b612f475f8201612f4160208801612eb1565b90612eec565b612f6060018201612f5a6040880161193d565b90611b16565b612f7960028201612f7360608801611bcd565b90611be9565b612f9260038201612f8c608088016118e5565b9061185b565b01920161193d565b90611b16565b565b90612fac91612f0c565b565b9190612fc1905f602085019401906111b1565b565b91926130756130869294612ff285612feb612fe5612fe05f612d86565b610432565b91610432565b1415612deb565b61301e6130066130018361228c565b61228f565b6130186130125f611645565b91610144565b11612e6d565b61306c8593613063889361305a60019161305142959761304861303f612e96565b9b5f8d01611897565b60208b01612ea3565b604089016118a5565b606087016118c4565b60808501611889565b60a083016118a5565b6130816002849061124c565b612fa2565b6130c56130b37f9f192d90f005c1163e866a86163fcf3aa01231f40671da1959d438410ae6c82c9261081b565b926130bc610132565b91829182612fae565b0390a2565b906130d6939291612d38565b565b61310590613100336130fa6130f46130ef5f610239565b610432565b91610432565b14612d0f565b613189565b565b5f7f496e76616c69642061646d696e20616464726573730000000000000000000000910152565b61313b601560209261045c565b61314481613107565b0190565b61315d9060208101905f81830391015261312e565b90565b1561316757565b61316f610132565b62461bcd60e51b81528061318560048201613148565b0390fd5b6131b8906131b2816131ab6131a56131a05f612d86565b610432565b91610432565b1415613160565b5f61191d565b565b6131c3906130d8565b56fea264697066735822122045049f87f055d33b1d0a80c8198cbfc194afb763cdab74d6d0bc8ff6b4dcd7a564736f6c634300081e0033";

type AgriculturalSupplyChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgriculturalSupplyChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgriculturalSupplyChain__factory extends ContractFactory {
  constructor(...args: AgriculturalSupplyChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgriculturalSupplyChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AgriculturalSupplyChain__factory {
    return super.connect(runner) as AgriculturalSupplyChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgriculturalSupplyChainInterface {
    return new Interface(_abi) as AgriculturalSupplyChainInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AgriculturalSupplyChain {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AgriculturalSupplyChain;
  }
}
